<!DOCTYPE html>
<html lang="it">
<head>
    <link rel="icon" type="image/png" href="../static/images/LogoNoBG.png" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Collaborazione Pastorale - Eventi</title>
    <link rel="stylesheet" href="../static/css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <!-- Navigation placeholder -->
    <div id="nav-placeholder"></div>

    <main class="main-wrapper">
        <div class="content">
            <h1>Eventi e Attività</h1>
    
            <section class="calendar-section">
                <h2>Calendario Eventi</h2>
                <div class="calendar-filters">
                    <button class="filter-btn active" data-filter="all">Tutti</button>
                    <button class="filter-btn" data-filter="cultura">Cultura</button>
                    <button class="filter-btn" data-filter="spiritualita">Spiritualità</button>
                </div>
    
                <div id="events-container" class="events-grid large">
                    <!-- Events will be loaded dynamically from CSV -->
                </div>
            </section>

            <section class="recurring-activities">
                <h2>Attività Settimanali</h2>
                <div id="activities-container" class="activities-grid">
                    <!-- Activities will be loaded dynamically from CSV -->
                </div>
            </section>
        </div>
    </main>

    <!-- Footer placeholder -->
    <div id="footer-placeholder"></div>

    <!-- Add components script -->
    <script src="../static/js/components.js"></script>
    <script>
        // Function to fetch and parse CSV
        async function fetchCSV(url) {
            const response = await fetch(url);
            const csvText = await response.text();
            const lines = csvText.split('\n');
            const headers = lines[0].split(',').map(header => header.trim());
            
            return lines.slice(1).filter(line => line.trim() !== '').map(line => {
                const values = line.split(',').map(value => value.trim());
                const entry = {};
                headers.forEach((header, index) => {
                    entry[header] = values[index];
                });
                return entry;
            });
        }

        // Function to convert month number to abbreviated name
        function getMonthAbbr(monthNum) {
            const months = ["GEN", "FEB", "MAR", "APR", "MAG", "GIU", "LUG", "AGO", "SET", "OTT", "NOV", "DIC"];
            return months[parseInt(monthNum) - 1];
        }

        // Function to create event cards
        function createEventCard(event) {
            const dateParts = event.date.split('/'); // Assuming date format: DD/MM/YYYY
            const day = dateParts[0];
            const month = getMonthAbbr(dateParts[1]);

            return `
                <div class="event-card" data-category="${event.category}">
                    <div class="event-date">
                        <span class="day">${day}</span>
                        <span class="month">${month}</span>
                    </div>
                    <div class="event-details">
                        <h4>${event.title}</h4>
                        <p class="time">${event.time}</p>
                        <p class="description">${event.description}</p>
                        ${event.link ? `<a href="${event.link}" class="button">Scopri di più</a>` : ''}
                    </div>
                </div>
            `;
        }

        // Function to create activity cards
        function createActivityCard(activity) {
            return `
                <div class="activity-card">
                    <i class="fas fa-${activity.icon}"></i>
                    <h3>${activity.title}</h3>
                    <p>${activity.day}</p>
                    <p>${activity.time}</p>
                </div>
            `;
        }

        // Load events and activities when the DOM is loaded
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                // Load events
                const events = await fetchCSV('../csv/events.csv');
                const eventsContainer = document.getElementById('events-container');
                
                events.filter(event => event.type === 'event').forEach(event => {
                    eventsContainer.innerHTML += createEventCard(event);
                });

                // Load activities
                const activitiesContainer = document.getElementById('activities-container');
                events.filter(event => event.type === 'activity').forEach(activity => {
                    activitiesContainer.innerHTML += createActivityCard(activity);
                });

                // Initialize filter functionality
                const filterButtons = document.querySelectorAll('.filter-btn');
                filterButtons.forEach(button => {
                    button.addEventListener('click', () => {
                        const filter = button.getAttribute('data-filter');
                        
                        // Update active button
                        filterButtons.forEach(btn => btn.classList.remove('active'));
                        button.classList.add('active');
                        
                        // Filter events
                        const eventCards = document.querySelectorAll('.event-card');
                        eventCards.forEach(card => {
                            if (filter === 'all' || card.getAttribute('data-category') === filter) {
                                card.style.display = 'flex';
                            } else {
                                card.style.display = 'none';
                            }
                        });
                    });
                });
            } catch (error) {
                console.error('Error loading events:', error);
                document.getElementById('events-container').innerHTML = '<p>Si è verificato un errore nel caricamento degli eventi. Riprova più tardi.</p>';
                document.getElementById('activities-container').innerHTML = '<p>Si è verificato un errore nel caricamento delle attività. Riprova più tardi.</p>';
            }
        });
    </script>
</body>
</html>